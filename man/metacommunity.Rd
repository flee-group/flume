% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/community.R
\name{metacommunity}
\alias{metacommunity}
\title{Create a metacommunity}
\usage{
metacommunity(
  nsp = 2,
  nr = 1,
  niches = niches_uniform,
  niche_args = list(),
  sp_names = paste0("sp", 1:nsp),
  r_names = paste0("r", 1:nr),
  comp_scale = 1/nsp,
  dry_q_threshold = 0,
  r_lim = matrix(rep(c(0, 1), each = nr), ncol = 2),
  ratio,
  static
)
}
\arguments{
\item{niches}{The \href{niches}{niche scenario} to use.}

\item{niche_args}{A list of named arguments to be passed to the niche function}

\item{sp_names}{A vector of species names}

\item{r_names}{A vector of resource names}

\item{comp_scale}{Scale for the strength of competition, see 'details'.}

\item{dry_q_threshold}{The discharge at which a reach is considered dry, see 'details'}

\item{r_lim}{Minimum and maximum possible values for each resource dimension; can be a vector
in the case of a single resource, otherwise a matrix with 2 columns and nr rows.}

\item{ratio}{A 2-column matrix; each row is the indices of a pair of resources. The ratio of
the first to the second will define a single niche dimension. If missing, no ratios used.}

\item{static}{Vector, the indices of resources that are static, \code{NA} if none. Any resources
that are not static are by definition dynamic}
}
\value{
A metacommunity object
}
\description{
Create a metacommunity
}
\details{
The metacommunity describes the possible biological space for a \code{flume} model. It
consists of a few named elements:
\itemize{
\item \code{species}: a list of \code{\link[=species]{species()}} objects, describing the niche and dispersal parameters
for each possible species
\item \code{competition}: A square species interaction matrix describing the effect of each species
on each other species; generated using the overlap between species'
\href{f_niche.species()}{fundamental niches}.
\item \code{boundary}: A function that returns a site by species matrix giving the colonisation flux
from outside the river network; by default returns zero for all sites/species.
}

The \code{comp_scale} is treated as a multiplier, changing the value of the competition matrix.
By default the \code{comp_scale} parameter is 1/nsp, meaning pairwise competition gets less important
with the number of species (but overall competition may still increase, because pairwise
interactions are summed). This parameter must be:
\itemize{
\item a single value, interpreted as the overall strength of competition in the metacommunity,
\item a vector of length \code{nsp}, interpreted as the competitive strength of each species, or
\item a matrix with \code{nsp} rows and \code{nsp} columns, if asymmetric competition or fine control over
the strength of each interaction is desired. For asymmetric competition, changing the value of
\code{comp_scale[i,j]} will change the effect of species \code{i} on species \code{j}, but not the other way
around.
}

Each species' fundamental niche is defined as the difference between a Gaussian colonisation
function and a constant extinction function; a species will be present when c - e > 0.
Niches can be automatically generated (see \code{\link[=generate_niches]{generate_niches()}}; alternatively, to specify
the parameters manually, the following can be specified.

By default, intermittency will drive all species extinct (i.e., the extinction rate is infinite)
and colonisation rate will be zero. This can be changed using \code{dry_niche_scale}, which should be
a list of two vectors, one named \code{col}, one named \code{ext}. Each of these vectors should have one
entry per species, the values are the factor by which the colonisation and extinction rates
should be multiplied in the case that a reach is dry.
}
\examples{
\donttest{
	# defaults
	mc = metacommunity()

	# multiple species
	mc = metacommunity(nsp = 5)

	# multiple resources
	nlim = list( location = matrix(c(1, 2, 1, 3, 2, 4), ncol = 2))  # we need to specify the limits manually
	mc = metacommunity(nsp = 3, nr=2, niches = niches_custom, niche_args = nlim)

	# multiple species and resources with variance covariance matrices
	loc = matrix(c(1, 2, 1, 3, 2, 4), ncol = 2) # 3 species, 2 resources
	br_sp1 = matrix(c(1, 0.2, 0.2, 1), ncol = 2) # vcv matrix for one species
	breadth = list(br_sp1, br_sp1, br_sp1) # assume the same matrix for all species
	
	nopts = list(location = matrix(c(1, 2, 1, 3, 2, 4), ncol = 2), breadth = breadth, scale_c = c(0.5, 0.5, 0.55))
     # location of the species along the resource space
     # breadth defines the resouce utilisation 
     # scale competition 
	
	mc = metacommunity(nsp = 3, nr = 2, niches = niches_custom, niche_args = nopts)
	plot(mc)

     # variable tolerance to drying
	mc = metacommunity(nsp = 3, nr = 1, niches = niches_custom, niche_args = nopts, 
            dry_niche_scale = list(col = c(0, 0.1, 1), ext = c(Inf, 2, 1)))
}
}
