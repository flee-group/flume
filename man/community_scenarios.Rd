% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scenarios.r
\name{community_scenarios}
\alias{community_scenarios}
\alias{community_random}
\alias{community_equilibrium}
\title{Generate scenarios for site by species matrices}
\usage{
community_random(rn, mc, prevalence = 0.25, allow_empty_sites = TRUE)

community_equilibrium(rn, mc)
}
\arguments{
\item{rn}{A \code{\link[=river_network]{river_network()}}}

\item{mc}{A \code{\link[=metacommunity]{metacommunity()}}}

\item{prevalence}{A vector of length 1 or \code{length(mc[['species']])}, what proportion of sites
should be occupied on average by each species.}

\item{allow_empty_sites}{Logical, if FALSE then empty sites will be filled with a single species
at random; this may result in slight departures from the desired prevalence.}
}
\value{
A site by species matrix, with sites taken from \code{rc} and species from \code{mc}
}
\description{
Generate scenarios for site by species matrices
}
\details{
community_random will ensure that all sites have at least one species.
If many species have low prevalence, it may be that the initial random draw produces
many zero-richness sites, in which case one species will be selected at random for
each of these sites. This can have the side effect that the prevalences in the end do
not match the desired prevalence very closely.

community_equilibrium simply places species at all sites where they are expected to be present
at equilibrium, in the absence of competition (i.e., the fundamental niche is positive).
}
\examples{
Q = rep(1, 4)
adj = matrix(0, nrow = 4, ncol = 4)
adj[1,2] = adj[2,3] = adj[4,3] = 1
rn = river_network(adj, Q)
mc = metacommunity()
site_by_species(rn) = community_random(rn, mc)
plot(rn, variable = "site_by_species")
}
