% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/river_network.r
\name{state}
\alias{state}
\alias{state.river_network}
\alias{state<-.river_network}
\alias{boundary.river_network}
\alias{boundary<-.river_network}
\alias{boundary_species.river_network}
\alias{boundary_species<-.river_network}
\alias{site_by_species<-.river_network}
\alias{site_by_species.river_network}
\alias{reset_state}
\alias{reset_species}
\title{Get/set the (resource) state of a river network}
\usage{
\method{state}{river_network}(x, var, history = FALSE)

\method{state}{river_network}(x, var) <- value

\method{boundary}{river_network}(x, var)

\method{boundary}{river_network}(x, var) <- value

\method{boundary_species}{river_network}(x)

\method{boundary_species}{river_network}(x) <- value

\method{site_by_species}{river_network}(x) <- value

\method{site_by_species}{river_network}(x, history = FALSE)

reset_state(x, value)

reset_species(x, value)
}
\arguments{
\item{x}{A river network}

\item{var}{The state variable to extract/modify; must be one of \code{resources}, `}

\item{history}{Logical; if TRUE, entire state history is returned}

\item{value}{The value to update the variable with}
}
\description{
Setter and getter methods for river network state variables
}
\details{
By default, setting state will save the current state in the state history, then update
current state to \code{value}. Setting state to NULL erases the state variable.

\code{boundary()} returns the boundary condition of the river network, as a site by resources
or site by species matrix.
\verb{boundary() <-} sets the boundary; it must be a site by var matrix in the same format as
state.
}
